{"version":3,"sources":["Views/Articles/Articles.jsx","Views/Article/Article.jsx","App.js","reportWebVitals.js","index.js"],"names":["Articles","articles","useState","search","setSearch","sorted","useMemo","sort","a","b","format","str","title","toUpperCase","localeCompare","style","textAlign","padding","onChange","e","target","value","id","fontSize","placeholder","display","flexDirection","filter","article","includes","map","component","to","paddingLeft","opacity","Article","paths","onGetArticles","onGetPaths","useParams","setArticle","useEffect","length","found","find","el","maxWidth","margin","dangerouslySetInnerHTML","__html","introtext","replaceAll","fulltext","imagesFormatted","image","match","path","src","process","App","setArticles","setPaths","getPaths","loadData","JSON","parse","stringify","pathsJson","getArticles","articlesJson","exact","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d4d1cca.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Articles = ({ articles = [] }) => {\n  const [search, setSearch] = useState(\"\");\n\n  const sorted = useMemo(\n    () =>\n      articles.sort((a, b) => {\n        const format = (str) => str.title.toUpperCase();\n\n        return format(a).localeCompare(format(b));\n      }),\n    [articles]\n  );\n\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\" }}>Traupis.lt archyvas</h1>\n      <div style={{ textAlign: \"center\", padding: 10 }}>\n        <input\n          onChange={(e) => setSearch(e.target.value)}\n          id=\"search\"\n          value={search}\n          style={{ padding: 4, fontSize: 20 }}\n          placeholder=\"PaieÅ¡ka\"\n        />\n      </div>\n\n      <ul style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {sorted\n          .filter((article) =>\n            article.title.toUpperCase().includes(search.toUpperCase())\n          )\n          .map((article) => (\n            <Link\n              key={article.id}\n              component=\"li\"\n              to={`/articles/${article.id}`}\n            >\n              <span>{article.title}</span>\n              <span style={{ paddingLeft: 10, opacity: 0.3 }}>\n                ({article.id})\n              </span>\n            </Link>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Article = ({ articles, paths, onGetArticles, onGetPaths }) => {\n  const { id } = useParams();\n  // const [article, setArticle] = useState();\n  const [article, setArticle] = useState();\n\n  useEffect(() => {\n    if (!articles.length) {\n      onGetArticles();\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (!article) {\n      const found = articles.find((el) => el.id === id);\n      setArticle(found);\n    }\n  }, [article, articles]);\n\n  useEffect(() => {\n    if (!paths.length) {\n      onGetPaths();\n    }\n  }, [article]);\n\n  if (!article) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <div style={{ maxWidth: 700, margin: \"auto\" }}>\n      <h1>{article.title}</h1>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: article.introtext.replaceAll(\"{mosimage}\", \"\"),\n        }}\n      />\n      <p\n        dangerouslySetInnerHTML={{\n          __html: article.fulltext.replaceAll(\"{mosimage}\", \"\"),\n        }}\n      />\n\n      {article?.imagesFormatted.map((image) => {\n        const match = paths.find((path) => path.includes(image.path));\n        if (!match) {\n          return <div>img not found</div>;\n        }\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <img src={`${process.env.PUBLIC_URL}/${match}`} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport articlesJson from \"./assets/output.json\";\nimport pathsJson from \"./assets/paths.json\";\nimport { useEffect, useState } from \"react\";\nimport { Articles } from \"./Views/Articles/Articles\";\nimport { Article } from \"./Views/Article/Article\";\n\nfunction App() {\n  const [articles, setArticles] = useState([]);\n  const [paths, setPaths] = useState([]);\n\n  const getPaths = () => {\n    const loadData = JSON.parse(JSON.stringify(pathsJson));\n    setPaths(loadData.paths);\n  };\n\n  const getArticles = () => {\n    const loadData = JSON.parse(JSON.stringify(articlesJson));\n    setArticles(loadData);\n  };\n\n  useEffect(() => {\n    if (!articles.length) {\n      getArticles();\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (!paths.length) {\n      getPaths();\n    }\n  }, [paths]);\n\n  return (\n    <Routes>\n      <Route\n        exact\n        path=\"/articles\"\n        element={<Articles articles={articles} />}\n      />\n      <Route\n        exact\n        path=\"/articles/:id\"\n        element={\n          <Article\n            articles={articles}\n            paths={paths}\n            onGetArticles={getArticles}\n            onGetPaths={getPaths}\n          />\n        }\n      />\n      <Route path=\"/\" element={<Navigate replace to=\"/articles\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}